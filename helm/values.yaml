# Specifies which namespaces to query for helm 3 metrics.  Defaults to all
namespaces: ""

serviceMonitor:
  # Specifies whether a ServiceMonitor should be created
  create: false
  interval:
  scrapeTimeout:
  namespace:
  additionalLabels: {}

replicaCount: 1

image:
  repository: sstarcher/helm-exporter
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

podAnnotations: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9571
  annotations: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Configuration to specifiy from which upstream repo to get the latest helm chart version
# This is useful for the case of e.g. where the name "mysql" exist for multiple charts
# Also if the repo is not the default helm repo
config:
  helmRegistries:
    overrideChartNames: {}
#      mysql: stable/test
# If the helm charts are not stored on hub.helm.sh then a custom registry can be configured here.
# Currently only index.yaml registry is supported (helm supports other registries as well)
  override:
    - registry:
        url: "" # https://some.url/index.yaml # Url to the index file
      charts: [] # Chart names
#        - splunk
#        - falco-eks-audit-bridge
      allowAllReleases: true # This allows all semver versions, like release candidates or custom suffixes. Default is false
